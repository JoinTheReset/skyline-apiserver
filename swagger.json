{
    "openapi": "3.1.0",
    "info": {
        "title": "Skyline API",
        "version": "0.1.0"
    },
    "paths": {
        "/api/v1/login": {
            "post": {
                "tags": [
                    "Login"
                ],
                "summary": "Login",
                "description": "Login & get user profile.",
                "operationId": "login_api_v1_login_post",
                "parameters": [
                    {
                        "required": false,
                        "schema": {
                            "type": "string",
                            "pattern": "^req-\\w{8}(-\\w{4}){3}-\\w{12}",
                            "title": "X-Openstack-Request-Id",
                            "default": ""
                        },
                        "name": "X-Openstack-Request-Id",
                        "in": "header"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Credential"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Profile"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedMessage"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/sso": {
            "get": {
                "tags": [
                    "Login"
                ],
                "summary": "Get Sso",
                "description": "SSO configuration.",
                "operationId": "get_sso_api_v1_sso_get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SSO"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/websso": {
            "post": {
                "tags": [
                    "Login"
                ],
                "summary": "Websso",
                "description": "Websso",
                "operationId": "websso_api_v1_websso_post",
                "parameters": [
                    {
                        "required": false,
                        "schema": {
                            "type": "string",
                            "pattern": "^req-\\w{8}(-\\w{4}){3}-\\w{12}",
                            "title": "X-Openstack-Request-Id",
                            "default": ""
                        },
                        "name": "X-Openstack-Request-Id",
                        "in": "header"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_websso_api_v1_websso_post"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "302": {
                        "description": "Redirect",
                        "class": {
                            "__module__": "starlette.responses",
                            "__init__": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedMessage"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/profile": {
            "get": {
                "tags": [
                    "Login"
                ],
                "summary": "Get Profile",
                "description": "Get user profile.",
                "operationId": "get_profile_api_v1_profile_get",
                "parameters": [
                    {
                        "required": false,
                        "schema": {
                            "type": "string",
                            "pattern": "^req-\\w{8}(-\\w{4}){3}-\\w{12}",
                            "title": "X-Openstack-Request-Id",
                            "default": ""
                        },
                        "name": "X-Openstack-Request-Id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Profile"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedMessage"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/logout": {
            "post": {
                "tags": [
                    "Login"
                ],
                "summary": "Logout",
                "description": "Log out.",
                "operationId": "logout_api_v1_logout_post",
                "parameters": [
                    {
                        "required": false,
                        "schema": {
                            "type": "string",
                            "pattern": "^req-\\w{8}(-\\w{4}){3}-\\w{12}",
                            "title": "X-Openstack-Request-Id",
                            "default": ""
                        },
                        "name": "X-Openstack-Request-Id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/switch_project/{project_id}": {
            "post": {
                "tags": [
                    "Login"
                ],
                "summary": "Switch Project",
                "description": "Switch project.",
                "operationId": "switch_project_api_v1_switch_project__project_id__post",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Project Id"
                        },
                        "name": "project_id",
                        "in": "path"
                    },
                    {
                        "required": false,
                        "schema": {
                            "type": "string",
                            "pattern": "^req-\\w{8}(-\\w{4}){3}-\\w{12}",
                            "title": "X-Openstack-Request-Id",
                            "default": ""
                        },
                        "name": "X-Openstack-Request-Id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Profile"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedMessage"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/extension/servers": {
            "get": {
                "tags": [
                    "Extension"
                ],
                "summary": "List Servers",
                "description": "List Servers",
                "operationId": "list_servers_api_v1_extension_servers_get",
                "parameters": [
                    {
                        "description": "Requests a page size of items. Returns a number of items up to a limit value.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0.0,
                            "title": "Limit",
                            "description": "Requests a page size of items. Returns a number of items up to a limit value."
                        },
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "description": "The ID of the last-seen item.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Marker",
                            "description": "The ID of the last-seen item."
                        },
                        "name": "marker",
                        "in": "query"
                    },
                    {
                        "description": "Indicates in which directions to sort.",
                        "required": false,
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/SortDir"
                                }
                            ],
                            "description": "Indicates in which directions to sort."
                        },
                        "name": "sort_dirs",
                        "in": "query"
                    },
                    {
                        "description": "Indicates in which attributes to sort. Host is only used for admin role users",
                        "required": false,
                        "schema": {
                            "items": {
                                "$ref": "#/components/schemas/ServerSortKey"
                            },
                            "type": "array",
                            "description": "Indicates in which attributes to sort. Host is only used for admin role users"
                        },
                        "name": "sort_keys",
                        "in": "query"
                    },
                    {
                        "description": "List servers for all projects.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "title": "All Projects",
                            "description": "List servers for all projects."
                        },
                        "name": "all_projects",
                        "in": "query"
                    },
                    {
                        "description": "Filter the list of servers by the given project ID. Only works when the all_projects filter is also specified.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Project Id",
                            "description": "Filter the list of servers by the given project ID. Only works when the all_projects filter is also specified."
                        },
                        "name": "project_id",
                        "in": "query"
                    },
                    {
                        "description": "Filter the list of servers by the given project name. Only works when the all_projects filter is also specified.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Project Name",
                            "description": "Filter the list of servers by the given project name. Only works when the all_projects filter is also specified."
                        },
                        "name": "project_name",
                        "in": "query"
                    },
                    {
                        "description": "Filter the list of servers by the given server name. Support fuzzy query.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Name",
                            "description": "Filter the list of servers by the given server name. Support fuzzy query."
                        },
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "description": "Filter the list of servers by the given server status.",
                        "required": false,
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/ServerStatus"
                                }
                            ],
                            "description": "Filter the list of servers by the given server status."
                        },
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "description": "Filter the list of servers by the given host. It will be ignored for non-admin user.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Host",
                            "description": "Filter the list of servers by the given host. It will be ignored for non-admin user."
                        },
                        "name": "host",
                        "in": "query"
                    },
                    {
                        "description": "Filter the list of servers by the given flavor ID.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Flavor Id",
                            "description": "Filter the list of servers by the given flavor ID."
                        },
                        "name": "flavor_id",
                        "in": "query"
                    },
                    {
                        "description": "Filter the list of servers by the given server UUID.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Uuid",
                            "description": "Filter the list of servers by the given server UUID."
                        },
                        "name": "uuid",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "type": "string",
                            "pattern": "^req-\\w{8}(-\\w{4}){3}-\\w{12}",
                            "title": "X-Openstack-Request-Id",
                            "default": ""
                        },
                        "name": "X-Openstack-Request-Id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServersResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestMessage"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedMessage"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenMessage"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorMessage"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/extension/recycle_servers": {
            "get": {
                "tags": [
                    "Extension"
                ],
                "summary": "List Recycle Servers",
                "description": "List Recycle Servers",
                "operationId": "list_recycle_servers_api_v1_extension_recycle_servers_get",
                "parameters": [
                    {
                        "description": "Requests a page size of items. Returns a number of items up to a limit value.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0.0,
                            "title": "Limit",
                            "description": "Requests a page size of items. Returns a number of items up to a limit value."
                        },
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "description": "The ID of the last-seen item.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Marker",
                            "description": "The ID of the last-seen item."
                        },
                        "name": "marker",
                        "in": "query"
                    },
                    {
                        "description": "Indicates in which directions to sort.",
                        "required": false,
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/SortDir"
                                }
                            ],
                            "description": "Indicates in which directions to sort."
                        },
                        "name": "sort_dirs",
                        "in": "query"
                    },
                    {
                        "description": "Indicates in which attributes to sort. Updated_at is used as deleted_at",
                        "required": false,
                        "schema": {
                            "items": {
                                "$ref": "#/components/schemas/RecycleServerSortKey"
                            },
                            "type": "array",
                            "description": "Indicates in which attributes to sort. Updated_at is used as deleted_at"
                        },
                        "name": "sort_keys",
                        "in": "query"
                    },
                    {
                        "description": "List recycle servers for all projects.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "title": "All Projects",
                            "description": "List recycle servers for all projects."
                        },
                        "name": "all_projects",
                        "in": "query"
                    },
                    {
                        "description": "Filter the list of recycle servers by the given project ID. Only works when the all_projects filter is also specified.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Project Id",
                            "description": "Filter the list of recycle servers by the given project ID. Only works when the all_projects filter is also specified."
                        },
                        "name": "project_id",
                        "in": "query"
                    },
                    {
                        "description": "Filter the list of recycle servers by the given project name. Only works when the all_projects filter is also specified.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Project Name",
                            "description": "Filter the list of recycle servers by the given project name. Only works when the all_projects filter is also specified."
                        },
                        "name": "project_name",
                        "in": "query"
                    },
                    {
                        "description": "Filter the list of recycle servers by the given server name. Support fuzzy query.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Name",
                            "description": "Filter the list of recycle servers by the given server name. Support fuzzy query."
                        },
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "description": "Filter the list of recycle servers by the given recycle server UUID.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Uuid",
                            "description": "Filter the list of recycle servers by the given recycle server UUID."
                        },
                        "name": "uuid",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "type": "string",
                            "pattern": "^req-\\w{8}(-\\w{4}){3}-\\w{12}",
                            "title": "X-Openstack-Request-Id",
                            "default": ""
                        },
                        "name": "X-Openstack-Request-Id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RecycleServersResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestMessage"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedMessage"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenMessage"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorMessage"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/extension/volumes": {
            "get": {
                "tags": [
                    "Extension"
                ],
                "summary": "List Volumes",
                "description": "List Volumes",
                "operationId": "list_volumes_api_v1_extension_volumes_get",
                "parameters": [
                    {
                        "description": "Requests a page size of items. Returns a number of items up to a limit value.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0.0,
                            "title": "Limit",
                            "description": "Requests a page size of items. Returns a number of items up to a limit value."
                        },
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "description": "The ID of the last-seen item.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Marker",
                            "description": "The ID of the last-seen item."
                        },
                        "name": "marker",
                        "in": "query"
                    },
                    {
                        "description": "Indicates in which directions to sort.",
                        "required": false,
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/SortDir"
                                }
                            ],
                            "description": "Indicates in which directions to sort."
                        },
                        "name": "sort_dirs",
                        "in": "query"
                    },
                    {
                        "description": "Indicates in which attributes to sort. Updated_at is used as deleted_at",
                        "required": false,
                        "schema": {
                            "items": {
                                "$ref": "#/components/schemas/VolumeSortKey"
                            },
                            "type": "array",
                            "description": "Indicates in which attributes to sort. Updated_at is used as deleted_at"
                        },
                        "name": "sort_keys",
                        "in": "query"
                    },
                    {
                        "description": "List volumes for all projects.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "title": "All Projects",
                            "description": "List volumes for all projects."
                        },
                        "name": "all_projects",
                        "in": "query"
                    },
                    {
                        "description": "Filter the list of volumes by the given project ID.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Project Id",
                            "description": "Filter the list of volumes by the given project ID."
                        },
                        "name": "project_id",
                        "in": "query"
                    },
                    {
                        "description": "Filter the list of volumes by the given server name.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Name",
                            "description": "Filter the list of volumes by the given server name."
                        },
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "description": "Filter the list of volumes by the given multiattach.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "title": "Multiattach",
                            "description": "Filter the list of volumes by the given multiattach."
                        },
                        "name": "multiattach",
                        "in": "query"
                    },
                    {
                        "description": "Filter the list of volumes by the given status.",
                        "required": false,
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/VolumeStatus"
                                }
                            ],
                            "description": "Filter the list of volumes by the given status."
                        },
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "description": "Filter the list of volumes by the given bootable.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "title": "Bootable",
                            "description": "Filter the list of volumes by the given bootable."
                        },
                        "name": "bootable",
                        "in": "query"
                    },
                    {
                        "description": "Filter the list of volumes by the given volumes UUID.",
                        "required": false,
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array",
                            "title": "Uuid",
                            "description": "Filter the list of volumes by the given volumes UUID."
                        },
                        "name": "uuid",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "type": "string",
                            "pattern": "^req-\\w{8}(-\\w{4}){3}-\\w{12}",
                            "title": "X-Openstack-Request-Id",
                            "default": ""
                        },
                        "name": "X-Openstack-Request-Id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VolumesResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedMessage"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenMessage"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorMessage"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/extension/volume_snapshots": {
            "get": {
                "tags": [
                    "Extension"
                ],
                "summary": "List Volume Snapshots",
                "description": "List Volume Snapshots.",
                "operationId": "list_volume_snapshots_api_v1_extension_volume_snapshots_get",
                "parameters": [
                    {
                        "description": "Requests a page size of items. Return items up to the limit value.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0.0,
                            "title": "Limit",
                            "description": "Requests a page size of items. Return items up to the limit value."
                        },
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "description": "The ID of the last-seen item.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Marker",
                            "description": "The ID of the last-seen item."
                        },
                        "name": "marker",
                        "in": "query"
                    },
                    {
                        "description": "Indicates in which directions to sort.",
                        "required": false,
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/SortDir"
                                }
                            ],
                            "description": "Indicates in which directions to sort."
                        },
                        "name": "sort_dirs",
                        "in": "query"
                    },
                    {
                        "description": "Indicates in which attributes to sort.",
                        "required": false,
                        "schema": {
                            "items": {
                                "$ref": "#/components/schemas/VolumeSnapshotSortKey"
                            },
                            "type": "array",
                            "description": "Indicates in which attributes to sort."
                        },
                        "name": "sort_keys",
                        "in": "query"
                    },
                    {
                        "description": "List snapshots for all projects.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "title": "All Projects",
                            "description": "List snapshots for all projects."
                        },
                        "name": "all_projects",
                        "in": "query"
                    },
                    {
                        "description": "Filter the list of snapshots by the given project ID.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Project Id",
                            "description": "Filter the list of snapshots by the given project ID."
                        },
                        "name": "project_id",
                        "in": "query"
                    },
                    {
                        "description": "Filter the list of snapshots by the given snapshot name.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Name",
                            "description": "Filter the list of snapshots by the given snapshot name."
                        },
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "description": "Filter the list of snapshots by the given snapshot status.",
                        "required": false,
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/VolumeSnapshotStatus"
                                }
                            ],
                            "description": "Filter the list of snapshots by the given snapshot status."
                        },
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "description": "Filter the list of snapshots by the given volume ID.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Volume Id",
                            "description": "Filter the list of snapshots by the given volume ID."
                        },
                        "name": "volume_id",
                        "in": "query"
                    },
                    {
                        "description": "Filter the list of snapshots by the given snapshot UUID.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Uuid",
                            "description": "Filter the list of snapshots by the given snapshot UUID."
                        },
                        "name": "uuid",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "type": "string",
                            "pattern": "^req-\\w{8}(-\\w{4}){3}-\\w{12}",
                            "title": "X-Openstack-Request-Id",
                            "default": ""
                        },
                        "name": "X-Openstack-Request-Id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VolumeSnapshotsResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedMessage"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenMessage"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorMessage"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/extension/ports": {
            "get": {
                "tags": [
                    "Extension"
                ],
                "summary": "List Ports",
                "description": "List Ports.",
                "operationId": "list_ports_api_v1_extension_ports_get",
                "parameters": [
                    {
                        "description": "Requests a page size of items. Returns a number of items up to a limit value.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0.0,
                            "title": "Limit",
                            "description": "Requests a page size of items. Returns a number of items up to a limit value."
                        },
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "description": "The ID of the last-seen item.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Marker",
                            "description": "The ID of the last-seen item."
                        },
                        "name": "marker",
                        "in": "query"
                    },
                    {
                        "description": "Indicates in which directions to sort.",
                        "required": false,
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/SortDir"
                                }
                            ],
                            "description": "Indicates in which directions to sort."
                        },
                        "name": "sort_dirs",
                        "in": "query"
                    },
                    {
                        "description": "Indicates in which attributes to sort.",
                        "required": false,
                        "schema": {
                            "items": {
                                "$ref": "#/components/schemas/PortSortKey"
                            },
                            "type": "array",
                            "description": "Indicates in which attributes to sort."
                        },
                        "name": "sort_keys",
                        "in": "query"
                    },
                    {
                        "description": "List ports for all projects.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "title": "All Projects",
                            "description": "List ports for all projects."
                        },
                        "name": "all_projects",
                        "in": "query"
                    },
                    {
                        "description": "Filter the list of ports by the given project ID.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Project Id",
                            "description": "Filter the list of ports by the given project ID."
                        },
                        "name": "project_id",
                        "in": "query"
                    },
                    {
                        "description": "Filter the list of ports by the given port name.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Name",
                            "description": "Filter the list of ports by the given port name."
                        },
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "description": "Filter the list of ports by the given port status.",
                        "required": false,
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/PortStatus"
                                }
                            ],
                            "description": "Filter the list of ports by the given port status."
                        },
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "description": "Filter the list of ports by the given network name.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Network Name",
                            "description": "Filter the list of ports by the given network name."
                        },
                        "name": "network_name",
                        "in": "query"
                    },
                    {
                        "description": "Filter the list of ports by the given network ID.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Network Id",
                            "description": "Filter the list of ports by the given network ID."
                        },
                        "name": "network_id",
                        "in": "query"
                    },
                    {
                        "description": "The ID of the device that uses this port. For example, a server instance or a logical router.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Device Id",
                            "description": "The ID of the device that uses this port. For example, a server instance or a logical router."
                        },
                        "name": "device_id",
                        "in": "query"
                    },
                    {
                        "description": "The entity type that uses this port.",
                        "required": false,
                        "schema": {
                            "items": {
                                "$ref": "#/components/schemas/PortDeviceOwner"
                            },
                            "type": "array",
                            "description": "The entity type that uses this port."
                        },
                        "name": "device_owner",
                        "in": "query"
                    },
                    {
                        "description": "Filter the list of ports by the given port UUID.",
                        "required": false,
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array",
                            "title": "Uuid",
                            "description": "Filter the list of ports by the given port UUID."
                        },
                        "name": "uuid",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "type": "string",
                            "pattern": "^req-\\w{8}(-\\w{4}){3}-\\w{12}",
                            "title": "X-Openstack-Request-Id",
                            "default": ""
                        },
                        "name": "X-Openstack-Request-Id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PortsResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedMessage"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenMessage"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorMessage"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/extension/compute-services": {
            "get": {
                "tags": [
                    "Extension"
                ],
                "summary": "Compute Services",
                "description": "List compute services",
                "operationId": "compute_services_api_v1_extension_compute_services_get",
                "parameters": [
                    {
                        "description": "Filter the list of compute services by the given binary.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Binary",
                            "description": "Filter the list of compute services by the given binary."
                        },
                        "name": "binary",
                        "in": "query"
                    },
                    {
                        "description": "Filter the list of compute services by the given host.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Host",
                            "description": "Filter the list of compute services by the given host."
                        },
                        "name": "host",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "type": "string",
                            "pattern": "^req-\\w{8}(-\\w{4}){3}-\\w{12}",
                            "title": "X-Openstack-Request-Id",
                            "default": ""
                        },
                        "name": "X-Openstack-Request-Id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ComputeServicesResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedMessage"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorMessage"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/query": {
            "get": {
                "tags": [
                    "Prometheus"
                ],
                "summary": "Prometheus Query",
                "description": "Prometheus query API.",
                "operationId": "prometheus_query_api_v1_query_get",
                "parameters": [
                    {
                        "description": "The query expression of prometheus to filter.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Query",
                            "description": "The query expression of prometheus to filter."
                        },
                        "name": "query",
                        "in": "query"
                    },
                    {
                        "description": "The time to filter.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Time",
                            "description": "The time to filter."
                        },
                        "name": "time",
                        "in": "query"
                    },
                    {
                        "description": "The timeout to filter.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Timeout",
                            "description": "The timeout to filter."
                        },
                        "name": "timeout",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PrometheusQueryResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedMessage"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorMessage"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/query_range": {
            "get": {
                "tags": [
                    "Prometheus"
                ],
                "summary": "Prometheus Query Range",
                "description": "Prometheus query_range API.",
                "operationId": "prometheus_query_range_api_v1_query_range_get",
                "parameters": [
                    {
                        "description": "The query expression of prometheus to filter.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Query",
                            "description": "The query expression of prometheus to filter."
                        },
                        "name": "query",
                        "in": "query"
                    },
                    {
                        "description": "The start time to filter.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Start",
                            "description": "The start time to filter."
                        },
                        "name": "start",
                        "in": "query"
                    },
                    {
                        "description": "The end time to filter.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "End",
                            "description": "The end time to filter."
                        },
                        "name": "end",
                        "in": "query"
                    },
                    {
                        "description": "The step to filter.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Step",
                            "description": "The step to filter."
                        },
                        "name": "step",
                        "in": "query"
                    },
                    {
                        "description": "The timeout to filter.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Timeout",
                            "description": "The timeout to filter."
                        },
                        "name": "timeout",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PrometheusQueryRangeResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedMessage"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorMessage"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/contrib/keystone_endpoints": {
            "get": {
                "tags": [
                    "Contrib"
                ],
                "summary": "List Keystone Endpoints",
                "description": "List Keystone Endpoints",
                "operationId": "list_keystone_endpoints_api_v1_contrib_keystone_endpoints_get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/KeystoneEndpoints"
                                    },
                                    "type": "array",
                                    "title": "Response 200 List Keystone Endpoints Api V1 Contrib Keystone Endpoints Get"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorMessage"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/contrib/domains": {
            "get": {
                "tags": [
                    "Contrib"
                ],
                "summary": "List Domains",
                "description": "List Domains",
                "operationId": "list_domains_api_v1_contrib_domains_get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "title": "Response 200 List Domains Api V1 Contrib Domains Get"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorMessage"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/contrib/regions": {
            "get": {
                "tags": [
                    "Contrib"
                ],
                "summary": "List Regions",
                "description": "List Regions",
                "operationId": "list_regions_api_v1_contrib_regions_get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "title": "Response 200 List Regions Api V1 Contrib Regions Get"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorMessage"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/policies": {
            "get": {
                "tags": [
                    "Policy"
                ],
                "summary": "List Policies",
                "description": "List policies and permissions",
                "operationId": "list_policies_api_v1_policies_get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Policies"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedMessage"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorMessage"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/policies/check": {
            "post": {
                "tags": [
                    "Policy"
                ],
                "summary": "Check Policies",
                "description": "Check policies permissions",
                "operationId": "check_policies_api_v1_policies_check_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PoliciesRules"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Policies"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedMessage"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenMessage"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorMessage"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/setting/{key}": {
            "get": {
                "tags": [
                    "Setting"
                ],
                "summary": "Show Setting",
                "description": "Get a setting item.",
                "operationId": "show_setting_api_v1_setting__key__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Key"
                        },
                        "name": "key",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Setting"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedMessage"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundMessage"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Setting"
                ],
                "summary": "Reset Setting",
                "description": "Reset a setting item to default",
                "operationId": "reset_setting_api_v1_setting__key__delete",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Key"
                        },
                        "name": "key",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Setting"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedMessage"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenMessage"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundMessage"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/setting": {
            "put": {
                "tags": [
                    "Setting"
                ],
                "summary": "Update Setting",
                "description": "Update a setting item.",
                "operationId": "update_setting_api_v1_setting_put",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateSetting"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Setting"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedMessage"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenMessage"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundMessage"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/settings": {
            "get": {
                "tags": [
                    "Setting"
                ],
                "summary": "List Settings",
                "description": "Get all settings.",
                "operationId": "list_settings_api_v1_settings_get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Settings"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedMessage"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "BadRequestMessage": {
                "properties": {
                    "detail": {
                        "type": "string",
                        "title": "Detail",
                        "description": "Detail message"
                    }
                },
                "type": "object",
                "required": [
                    "detail"
                ],
                "title": "BadRequestMessage"
            },
            "Body_websso_api_v1_websso_post": {
                "properties": {
                    "token": {
                        "type": "string",
                        "title": "Token"
                    }
                },
                "type": "object",
                "required": [
                    "token"
                ],
                "title": "Body_websso_api_v1_websso_post"
            },
            "ComputeServicesResponse": {
                "properties": {
                    "services": {
                        "items": {
                            "$ref": "#/components/schemas/ComputeServicesResponseBase"
                        },
                        "type": "array",
                        "title": "Services",
                        "description": "Services list"
                    }
                },
                "type": "object",
                "required": [
                    "services"
                ],
                "title": "ComputeServicesResponse"
            },
            "ComputeServicesResponseBase": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id",
                        "description": "Service id"
                    },
                    "binary": {
                        "type": "string",
                        "title": "Binary",
                        "description": "Service binary"
                    },
                    "disabled_reason": {
                        "type": "string",
                        "title": "Disabled Reason",
                        "description": "Disabled reason"
                    },
                    "host": {
                        "type": "string",
                        "title": "Host",
                        "description": "Host name"
                    },
                    "state": {
                        "type": "string",
                        "title": "State",
                        "description": "Service state"
                    },
                    "status": {
                        "type": "string",
                        "title": "Status",
                        "description": "Service status"
                    },
                    "updated_at": {
                        "type": "string",
                        "title": "Updated At",
                        "description": "Updated at"
                    },
                    "forced_down": {
                        "type": "boolean",
                        "title": "Forced Down",
                        "description": "Forced down"
                    },
                    "zone": {
                        "type": "string",
                        "title": "Zone",
                        "description": "Zone"
                    }
                },
                "type": "object",
                "required": [
                    "binary",
                    "host",
                    "status"
                ],
                "title": "ComputeServicesResponseBase"
            },
            "Credential": {
                "properties": {
                    "region": {
                        "type": "string",
                        "title": "Region",
                        "description": "Credential identity service region"
                    },
                    "domain": {
                        "type": "string",
                        "title": "Domain",
                        "description": "Credential user domain"
                    },
                    "username": {
                        "type": "string",
                        "title": "Username",
                        "description": "Credential username"
                    },
                    "password": {
                        "type": "string",
                        "title": "Password",
                        "description": "Credential password for user"
                    }
                },
                "type": "object",
                "required": [
                    "domain",
                    "username",
                    "password"
                ],
                "title": "Credential",
                "example": {
                    "region": "RegionOne",
                    "username": "admin",
                    "domain": "default",
                    "password": "admin"
                }
            },
            "Domain": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id",
                        "description": "Domain ID"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "Domain name"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name"
                ],
                "title": "Domain"
            },
            "FlavorInServer": {
                "properties": {
                    "ephemeral": {
                        "type": "integer",
                        "title": "Ephemeral",
                        "description": "Ephemeral disk size in GB"
                    },
                    "ram": {
                        "type": "integer",
                        "title": "Ram",
                        "description": "RAM size in MB"
                    },
                    "original_name": {
                        "type": "string",
                        "title": "Original Name",
                        "description": "Original flavor name"
                    },
                    "vcpus": {
                        "type": "integer",
                        "title": "Vcpus",
                        "description": "Number of vCPUs"
                    },
                    "extra_specs": {
                        "type": "object",
                        "title": "Extra Specs",
                        "description": "Extra specs"
                    },
                    "swap": {
                        "type": "integer",
                        "title": "Swap",
                        "description": "Swap size in MB"
                    },
                    "disk": {
                        "type": "integer",
                        "title": "Disk",
                        "description": "Disk size in GB"
                    }
                },
                "type": "object",
                "title": "FlavorInServer"
            },
            "ForbiddenMessage": {
                "properties": {
                    "detail": {
                        "type": "string",
                        "title": "Detail",
                        "description": "Detail message"
                    }
                },
                "type": "object",
                "required": [
                    "detail"
                ],
                "title": "ForbiddenMessage"
            },
            "HTTPValidationError": {
                "properties": {
                    "detail": {
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        },
                        "type": "array",
                        "title": "Detail"
                    }
                },
                "type": "object",
                "title": "HTTPValidationError"
            },
            "InternalServerErrorMessage": {
                "properties": {
                    "detail": {
                        "type": "string",
                        "title": "Detail",
                        "description": "Detail message"
                    }
                },
                "type": "object",
                "required": [
                    "detail"
                ],
                "title": "InternalServerErrorMessage"
            },
            "KeystoneEndpoints": {
                "properties": {
                    "region_name": {
                        "type": "string",
                        "title": "Region Name",
                        "description": "Region name"
                    },
                    "url": {
                        "type": "string",
                        "title": "Url",
                        "description": "Endpoint URL"
                    }
                },
                "type": "object",
                "required": [
                    "region_name",
                    "url"
                ],
                "title": "KeystoneEndpoints"
            },
            "Message": {
                "properties": {
                    "message": {
                        "type": "string",
                        "title": "Message",
                        "description": "Message"
                    },
                    "code": {
                        "type": "integer",
                        "title": "Code",
                        "description": "Code",
                        "default": 200
                    },
                    "title": {
                        "type": "string",
                        "title": "Title",
                        "description": "Title",
                        "default": "OK"
                    }
                },
                "type": "object",
                "required": [
                    "message"
                ],
                "title": "Message"
            },
            "NotFoundMessage": {
                "properties": {
                    "detail": {
                        "type": "string",
                        "title": "Detail",
                        "description": "Detail message"
                    }
                },
                "type": "object",
                "required": [
                    "detail"
                ],
                "title": "NotFoundMessage"
            },
            "Policies": {
                "properties": {
                    "policies": {
                        "items": {
                            "$ref": "#/components/schemas/Policy"
                        },
                        "type": "array",
                        "title": "Policies",
                        "description": "Policies list"
                    }
                },
                "type": "object",
                "required": [
                    "policies"
                ],
                "title": "Policies"
            },
            "PoliciesRules": {
                "properties": {
                    "rules": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Rules",
                        "description": "Policies rules list"
                    },
                    "target": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object",
                        "title": "Target",
                        "description": "Policies targets"
                    }
                },
                "type": "object",
                "required": [
                    "rules"
                ],
                "title": "PoliciesRules"
            },
            "Policy": {
                "properties": {
                    "rule": {
                        "type": "string",
                        "title": "Rule",
                        "description": "Policy rule"
                    },
                    "allowed": {
                        "type": "boolean",
                        "title": "Allowed",
                        "description": "Policy allowed"
                    }
                },
                "type": "object",
                "required": [
                    "rule",
                    "allowed"
                ],
                "title": "Policy"
            },
            "PortDeviceOwner": {
                "type": "string",
                "enum": [
                    "",
                    "compute:nova",
                    "compute:kuryr",
                    "network:router_ha_interface",
                    "network:ha_router_replicated_interface",
                    "network:router_interface",
                    "network:router_gateway",
                    "network:floatingip",
                    "network:local_ip",
                    "network:dhcp",
                    "network:router_interface_distributed",
                    "network:floatingip_agent_gateway",
                    "network:router_centralized_snat",
                    "network:routed",
                    "network:distributed",
                    "Octavia"
                ],
                "title": "PortDeviceOwner",
                "description": "An enumeration."
            },
            "PortSortKey": {
                "type": "string",
                "enum": [
                    "id",
                    "name",
                    "mac_address",
                    "status",
                    "project_id"
                ],
                "title": "PortSortKey",
                "description": "An enumeration."
            },
            "PortStatus": {
                "type": "string",
                "enum": [
                    "ACTIVE",
                    "DOWN",
                    "BUILD",
                    "ERROR",
                    "N/A"
                ],
                "title": "PortStatus",
                "description": "An enumeration."
            },
            "PortsResponse": {
                "properties": {
                    "ports": {
                        "items": {
                            "$ref": "#/components/schemas/PortsResponseBase"
                        },
                        "type": "array",
                        "title": "Ports",
                        "description": "Ports list"
                    }
                },
                "type": "object",
                "required": [
                    "ports"
                ],
                "title": "PortsResponse"
            },
            "PortsResponseBase": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id",
                        "description": "Port ID"
                    },
                    "origin_data": {
                        "type": "object",
                        "title": "Origin Data",
                        "description": "The origin_data is the same like the response of https://docs.openstack.org/api-ref/network/v2/index.html?expanded=list-ports-detail#list-ports"
                    },
                    "server_name": {
                        "type": "string",
                        "title": "Server Name",
                        "description": "Server name"
                    },
                    "network_name": {
                        "type": "string",
                        "title": "Network Name",
                        "description": "Network name"
                    },
                    "ipv4": {
                        "items": {},
                        "type": "array",
                        "title": "Ipv4",
                        "description": "IPv4 addresses"
                    },
                    "ipv6": {
                        "items": {},
                        "type": "array",
                        "title": "Ipv6",
                        "description": "IPv6 addresses"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "Will be removed, please use origin_data[name]",
                        "deprecated": true
                    },
                    "mac_address": {
                        "type": "string",
                        "title": "Mac Address",
                        "description": "Will be removed, please use origin_data[mac_address]",
                        "deprecated": true
                    },
                    "project_id": {
                        "type": "string",
                        "title": "Project Id",
                        "description": "Will be removed, please use origin_data[project_id]",
                        "deprecated": true
                    },
                    "device_owner": {
                        "type": "string",
                        "title": "Device Owner",
                        "description": "Will be removed, please use origin_data[device_owner]",
                        "deprecated": true
                    },
                    "device_id": {
                        "type": "string",
                        "title": "Device Id",
                        "description": "Will be removed, please use origin_data[device_id]",
                        "deprecated": true
                    },
                    "status": {
                        "type": "string",
                        "title": "Status",
                        "description": "Will be removed, please use origin_data[status]",
                        "deprecated": true
                    },
                    "created_at": {
                        "type": "string",
                        "title": "Created At",
                        "description": "Will be removed, please use origin_data[created_at]",
                        "deprecated": true
                    },
                    "network_id": {
                        "type": "string",
                        "title": "Network Id",
                        "description": "Will be removed, please use origin_data[network_id]",
                        "deprecated": true
                    },
                    "binding_vnic_type": {
                        "type": "string",
                        "title": "Binding Vnic Type",
                        "description": "Will be removed, please use origin_data[binding:vnic_type]",
                        "deprecated": true
                    },
                    "description": {
                        "type": "string",
                        "title": "Description",
                        "description": "Will be removed, please use origin_data[description]",
                        "deprecated": true
                    },
                    "port_security_enabled": {
                        "type": "boolean",
                        "title": "Port Security Enabled",
                        "description": "Will be removed, please use origin_data[port_security_enabled]",
                        "deprecated": true
                    },
                    "qos_policy_id": {
                        "type": "string",
                        "title": "Qos Policy Id",
                        "description": "Will be removed, please use origin_data[qos_policy_id]",
                        "deprecated": true
                    },
                    "fixed_ips": {
                        "items": {},
                        "type": "array",
                        "title": "Fixed Ips",
                        "description": "Will be removed, please use origin_data[fixed_ips]",
                        "deprecated": true
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "origin_data"
                ],
                "title": "PortsResponseBase"
            },
            "Profile": {
                "properties": {
                    "keystone_token": {
                        "type": "string",
                        "title": "Keystone Token",
                        "description": "Keystone token"
                    },
                    "region": {
                        "type": "string",
                        "title": "Region",
                        "description": "User region"
                    },
                    "exp": {
                        "type": "integer",
                        "title": "Exp",
                        "description": "Token expiration time"
                    },
                    "uuid": {
                        "type": "string",
                        "title": "Uuid",
                        "description": "UUID"
                    },
                    "project": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Project"
                            }
                        ],
                        "title": "Project",
                        "description": "User project"
                    },
                    "user": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/User"
                            }
                        ],
                        "title": "User",
                        "description": "User"
                    },
                    "roles": {
                        "items": {
                            "$ref": "#/components/schemas/Role"
                        },
                        "type": "array",
                        "title": "Roles",
                        "description": "User roles"
                    },
                    "keystone_token_exp": {
                        "type": "string",
                        "title": "Keystone Token Exp",
                        "description": "Keystone token expiration time"
                    },
                    "base_domains": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Base Domains",
                        "description": "User base domains"
                    },
                    "endpoints": {
                        "type": "object",
                        "title": "Endpoints",
                        "description": "Keystone endpoints"
                    },
                    "projects": {
                        "type": "object",
                        "title": "Projects",
                        "description": "User projects"
                    },
                    "default_project_id": {
                        "type": "string",
                        "title": "Default Project Id",
                        "description": "User default project ID"
                    },
                    "version": {
                        "type": "string",
                        "title": "Version",
                        "description": "Version"
                    }
                },
                "type": "object",
                "required": [
                    "keystone_token",
                    "region",
                    "exp",
                    "uuid",
                    "project",
                    "user",
                    "roles",
                    "keystone_token_exp",
                    "version"
                ],
                "title": "Profile"
            },
            "Project": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id",
                        "description": "Project ID"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "Project name"
                    },
                    "domain": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Domain"
                            }
                        ],
                        "title": "Domain",
                        "description": "Project domain"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "domain"
                ],
                "title": "Project"
            },
            "PrometheusQueryData": {
                "properties": {
                    "resultType": {
                        "type": "string",
                        "title": "Resulttype",
                        "description": "Prometheus result type"
                    },
                    "result": {
                        "items": {
                            "$ref": "#/components/schemas/PrometheusQueryResult"
                        },
                        "type": "array",
                        "title": "Result",
                        "description": "Prometheus query result"
                    }
                },
                "type": "object",
                "required": [
                    "resultType",
                    "result"
                ],
                "title": "PrometheusQueryData"
            },
            "PrometheusQueryRangeData": {
                "properties": {
                    "resultType": {
                        "type": "string",
                        "title": "Resulttype",
                        "description": "Prometheus result type"
                    },
                    "result": {
                        "items": {
                            "$ref": "#/components/schemas/PrometheusQueryRangeResult"
                        },
                        "type": "array",
                        "title": "Result",
                        "description": "Prometheus query range result"
                    }
                },
                "type": "object",
                "required": [
                    "resultType",
                    "result"
                ],
                "title": "PrometheusQueryRangeData"
            },
            "PrometheusQueryRangeResponse": {
                "properties": {
                    "status": {
                        "type": "string",
                        "title": "Status",
                        "description": "Prometheus status"
                    },
                    "errorType": {
                        "type": "string",
                        "title": "Errortype",
                        "description": "Prometheus error type"
                    },
                    "error": {
                        "type": "string",
                        "title": "Error",
                        "description": "Prometheus error"
                    },
                    "warnings": {
                        "type": "string",
                        "title": "Warnings",
                        "description": "Prometheus warnings"
                    },
                    "data": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PrometheusQueryRangeData"
                            }
                        ],
                        "title": "Data",
                        "description": "Prometheus query range data"
                    }
                },
                "type": "object",
                "required": [
                    "status"
                ],
                "title": "PrometheusQueryRangeResponse"
            },
            "PrometheusQueryRangeResult": {
                "properties": {
                    "metric": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object",
                        "title": "Metric",
                        "description": "Prometheus metric"
                    },
                    "value": {
                        "items": {},
                        "type": "array",
                        "title": "Value",
                        "description": "Prometheus metric value"
                    }
                },
                "type": "object",
                "required": [
                    "metric",
                    "value"
                ],
                "title": "PrometheusQueryRangeResult"
            },
            "PrometheusQueryResponse": {
                "properties": {
                    "status": {
                        "type": "string",
                        "title": "Status",
                        "description": "Prometheus status"
                    },
                    "errorType": {
                        "type": "string",
                        "title": "Errortype",
                        "description": "Prometheus error type"
                    },
                    "error": {
                        "type": "string",
                        "title": "Error",
                        "description": "Prometheus error"
                    },
                    "warnings": {
                        "type": "string",
                        "title": "Warnings",
                        "description": "Prometheus warnings"
                    },
                    "data": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PrometheusQueryData"
                            }
                        ],
                        "title": "Data",
                        "description": "Prometheus query data"
                    }
                },
                "type": "object",
                "required": [
                    "status"
                ],
                "title": "PrometheusQueryResponse"
            },
            "PrometheusQueryResult": {
                "properties": {
                    "metric": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object",
                        "title": "Metric",
                        "description": "Prometheus metric"
                    },
                    "value": {
                        "items": {},
                        "type": "array",
                        "title": "Value",
                        "description": "Prometheus metric value"
                    }
                },
                "type": "object",
                "required": [
                    "metric",
                    "value"
                ],
                "title": "PrometheusQueryResult"
            },
            "RecycleServerSortKey": {
                "type": "string",
                "enum": [
                    "uuid",
                    "display_name",
                    "updated_at",
                    "project_id"
                ],
                "title": "RecycleServerSortKey",
                "description": "An enumeration."
            },
            "RecycleServersResponse": {
                "properties": {
                    "recycle_servers": {
                        "items": {
                            "$ref": "#/components/schemas/RecycleServersResponseBase"
                        },
                        "type": "array",
                        "title": "Recycle Servers",
                        "description": "Recycle servers list"
                    }
                },
                "type": "object",
                "required": [
                    "recycle_servers"
                ],
                "title": "RecycleServersResponse"
            },
            "RecycleServersResponseBase": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "Recycle server id"
                    },
                    "origin_data": {
                        "type": "object",
                        "title": "Origin Data",
                        "description": "The origin_data is the same like the response of https://docs.openstack.org/api-ref/compute/?expanded=list-servers-detailed-detail#list-servers-detailed"
                    },
                    "project_name": {
                        "type": "string",
                        "title": "Project Name",
                        "description": "Project name"
                    },
                    "image": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Image",
                        "description": "Image id"
                    },
                    "image_name": {
                        "type": "string",
                        "title": "Image Name",
                        "description": "Image name"
                    },
                    "image_os_distro": {
                        "type": "string",
                        "title": "Image Os Distro",
                        "description": "Image os distro"
                    },
                    "fixed_addresses": {
                        "items": {},
                        "type": "array",
                        "title": "Fixed Addresses",
                        "description": "Fixed addresses"
                    },
                    "floating_addresses": {
                        "items": {},
                        "type": "array",
                        "title": "Floating Addresses",
                        "description": "Floating addresses"
                    },
                    "deleted_at": {
                        "type": "string",
                        "title": "Deleted At",
                        "description": "Deleted at"
                    },
                    "updated_at": {
                        "type": "string",
                        "title": "Updated At",
                        "description": "Updated at"
                    },
                    "reclaim_timestamp": {
                        "type": "number",
                        "title": "Reclaim Timestamp",
                        "description": "Reclaim timestamp"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "Will be removed, please use origin_data[name]",
                        "deprecated": true
                    },
                    "project_id": {
                        "type": "string",
                        "title": "Project Id",
                        "description": "Will be removed, please use origin_data[tenant_id]",
                        "deprecated": true
                    },
                    "host": {
                        "type": "string",
                        "title": "Host",
                        "description": "Will be removed, please use origin_data[OS-EXT-SRV-ATTR:host]",
                        "deprecated": true
                    },
                    "hostname": {
                        "type": "string",
                        "title": "Hostname",
                        "description": "Will be removed, please use origin_data[OS-EXT-SRV-ATTR:hostname]",
                        "deprecated": true
                    },
                    "flavor": {
                        "type": "string",
                        "title": "Flavor",
                        "description": "Will be removed, please use origin_data[flavor][original_name]",
                        "deprecated": true
                    },
                    "flavor_info": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/FlavorInServer"
                            }
                        ],
                        "title": "Flavor Info",
                        "description": "Will be removed, please use origin_data[flavor]",
                        "deprecated": true
                    },
                    "status": {
                        "type": "string",
                        "title": "Status",
                        "description": "Will be removed, please use origin_data[status]",
                        "deprecated": true
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "origin_data",
                    "reclaim_timestamp"
                ],
                "title": "RecycleServersResponseBase"
            },
            "Role": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id",
                        "description": "Role ID"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "Role name"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name"
                ],
                "title": "Role"
            },
            "SSO": {
                "properties": {
                    "enable_sso": {
                        "type": "boolean",
                        "title": "Enable Sso"
                    },
                    "protocols": {
                        "items": {
                            "$ref": "#/components/schemas/SSOInfo"
                        },
                        "type": "array",
                        "title": "Protocols"
                    }
                },
                "type": "object",
                "required": [
                    "enable_sso",
                    "protocols"
                ],
                "title": "SSO"
            },
            "SSOInfo": {
                "properties": {
                    "protocol": {
                        "type": "string",
                        "title": "Protocol"
                    },
                    "url": {
                        "type": "string",
                        "title": "Url"
                    }
                },
                "type": "object",
                "required": [
                    "protocol",
                    "url"
                ],
                "title": "SSOInfo"
            },
            "ServerSortKey": {
                "type": "string",
                "enum": [
                    "uuid",
                    "display_name",
                    "vm_state",
                    "locked",
                    "created_at",
                    "host",
                    "project_id"
                ],
                "title": "ServerSortKey",
                "description": "An enumeration."
            },
            "ServerStatus": {
                "type": "string",
                "enum": [
                    "ACTIVE",
                    "BUILD",
                    "ERROR",
                    "HARD_REBOOT",
                    "MIGRATING",
                    "PAUSED",
                    "REBOOT",
                    "REBUILD",
                    "RESCUE",
                    "RESIZE",
                    "SHELVED",
                    "SHELVED_OFFLOADED",
                    "SHUTOFF",
                    "SOFT_DELETED",
                    "SUSPENDED",
                    "UNKNOWN"
                ],
                "title": "ServerStatus",
                "description": "An enumeration."
            },
            "ServersResponse": {
                "properties": {
                    "servers": {
                        "items": {
                            "$ref": "#/components/schemas/ServersResponseBase"
                        },
                        "type": "array",
                        "title": "Servers",
                        "description": "Servers list"
                    }
                },
                "type": "object",
                "required": [
                    "servers"
                ],
                "title": "ServersResponse"
            },
            "ServersResponseBase": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "Server ID"
                    },
                    "origin_data": {
                        "type": "object",
                        "title": "Origin Data",
                        "description": "The origin_data is the same like the response of https://docs.openstack.org/api-ref/compute/?expanded=list-servers-detailed-detail#list-servers-detailed"
                    },
                    "project_name": {
                        "type": "string",
                        "title": "Project Name",
                        "description": "Project name"
                    },
                    "image": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Image",
                        "description": "Image ID"
                    },
                    "image_name": {
                        "type": "string",
                        "title": "Image Name",
                        "description": "Image name"
                    },
                    "image_os_distro": {
                        "type": "string",
                        "title": "Image Os Distro",
                        "description": "Image OS distro"
                    },
                    "fixed_addresses": {
                        "items": {},
                        "type": "array",
                        "title": "Fixed Addresses",
                        "description": "Fixed addresses"
                    },
                    "floating_addresses": {
                        "items": {},
                        "type": "array",
                        "title": "Floating Addresses",
                        "description": "Floating addresses"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "Will be removed, please use origin_data[name]",
                        "deprecated": true
                    },
                    "project_id": {
                        "type": "string",
                        "title": "Project Id",
                        "description": "Will be removed, please use origin_data[tenant_id]",
                        "deprecated": true
                    },
                    "host": {
                        "type": "string",
                        "title": "Host",
                        "description": "Will be removed, please use origin_data[OS-EXT-SRV-ATTR:host]",
                        "deprecated": true
                    },
                    "hostname": {
                        "type": "string",
                        "title": "Hostname",
                        "description": "Will be removed, please use origin_data[OS-EXT-SRV-ATTR:hostname]",
                        "deprecated": true
                    },
                    "flavor": {
                        "type": "string",
                        "title": "Flavor",
                        "description": "Will be removed, please use origin_data[flavor][original_name]",
                        "deprecated": true
                    },
                    "flavor_info": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/FlavorInServer"
                            }
                        ],
                        "title": "Flavor Info",
                        "description": "Will be removed, please use origin_data[flavor]",
                        "deprecated": true
                    },
                    "status": {
                        "type": "string",
                        "title": "Status",
                        "description": "Will be removed, please use origin_data[status]",
                        "deprecated": true
                    },
                    "locked": {
                        "type": "boolean",
                        "title": "Locked",
                        "description": "Will be removed, please use origin_data[locked]",
                        "deprecated": true
                    },
                    "created_at": {
                        "type": "string",
                        "title": "Created At",
                        "description": "Will be removed, please use origin_data[created]",
                        "deprecated": true
                    },
                    "task_state": {
                        "type": "string",
                        "title": "Task State",
                        "description": "Will be removed, please use origin_data[OS-EXT-STS:task_state]",
                        "deprecated": true
                    },
                    "vm_state": {
                        "type": "string",
                        "title": "Vm State",
                        "description": "Will be removed, please use origin_data[OS-EXT-STS:vm_state]",
                        "deprecated": true
                    },
                    "power_state": {
                        "type": "integer",
                        "title": "Power State",
                        "description": "Will be removed, please use origin_data[OS-EXT-STS:power_state]",
                        "deprecated": true
                    },
                    "root_device_name": {
                        "type": "string",
                        "title": "Root Device Name",
                        "description": "Will be removed, please use origin_data[OS-EXT-SRV-ATTR:root_device_name]",
                        "deprecated": true
                    },
                    "metadata": {
                        "type": "object",
                        "title": "Metadata",
                        "description": "Will be removed, please use origin_data[metadata]",
                        "deprecated": true
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "origin_data"
                ],
                "title": "ServersResponseBase"
            },
            "Setting": {
                "properties": {
                    "key": {
                        "type": "string",
                        "title": "Key",
                        "description": "Key of setting"
                    },
                    "value": {
                        "title": "Value",
                        "description": "Value of setting"
                    },
                    "hidden": {
                        "type": "boolean",
                        "title": "Hidden",
                        "description": "Hidden setting or not"
                    },
                    "restart_service": {
                        "type": "boolean",
                        "title": "Restart Service",
                        "description": "Restart service or not to apply setting"
                    }
                },
                "type": "object",
                "required": [
                    "key",
                    "value",
                    "restart_service"
                ],
                "title": "Setting"
            },
            "Settings": {
                "properties": {
                    "settings": {
                        "items": {
                            "$ref": "#/components/schemas/Setting"
                        },
                        "type": "array",
                        "title": "Settings",
                        "description": "Settings"
                    }
                },
                "type": "object",
                "required": [
                    "settings"
                ],
                "title": "Settings"
            },
            "SortDir": {
                "type": "string",
                "enum": [
                    "desc",
                    "asc"
                ],
                "title": "SortDir",
                "description": "An enumeration."
            },
            "UnauthorizedMessage": {
                "properties": {
                    "detail": {
                        "type": "string",
                        "title": "Detail",
                        "description": "Detail message"
                    }
                },
                "type": "object",
                "required": [
                    "detail"
                ],
                "title": "UnauthorizedMessage"
            },
            "UpdateSetting": {
                "properties": {
                    "key": {
                        "type": "string",
                        "title": "Key",
                        "description": "Key of setting"
                    },
                    "value": {
                        "title": "Value",
                        "description": "Value of setting"
                    }
                },
                "type": "object",
                "required": [
                    "key",
                    "value"
                ],
                "title": "UpdateSetting"
            },
            "User": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id",
                        "description": "User ID"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "User name"
                    },
                    "domain": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Domain"
                            }
                        ],
                        "title": "Domain",
                        "description": "User domain"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "domain"
                ],
                "title": "User"
            },
            "ValidationError": {
                "properties": {
                    "loc": {
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        },
                        "type": "array",
                        "title": "Location"
                    },
                    "msg": {
                        "type": "string",
                        "title": "Message"
                    },
                    "type": {
                        "type": "string",
                        "title": "Error Type"
                    }
                },
                "type": "object",
                "required": [
                    "loc",
                    "msg",
                    "type"
                ],
                "title": "ValidationError"
            },
            "VolumeAttachment": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id",
                        "description": "Volume attachment id"
                    },
                    "device": {
                        "type": "string",
                        "title": "Device",
                        "description": "Device name"
                    },
                    "server_id": {
                        "type": "string",
                        "title": "Server Id",
                        "description": "Server id"
                    },
                    "server_name": {
                        "type": "string",
                        "title": "Server Name",
                        "description": "Server name"
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ],
                "title": "VolumeAttachment"
            },
            "VolumeSnapshotChildVolume": {
                "properties": {
                    "volume_id": {
                        "type": "string",
                        "title": "Volume Id",
                        "description": "ID of volume",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "volume_name": {
                        "type": "string",
                        "title": "Volume Name",
                        "description": "Name of volume",
                        "example": "child-volume-demo"
                    }
                },
                "type": "object",
                "title": "VolumeSnapshotChildVolume"
            },
            "VolumeSnapshotSortKey": {
                "type": "string",
                "enum": [
                    "id",
                    "name",
                    "status",
                    "created_at"
                ],
                "title": "VolumeSnapshotSortKey",
                "description": "An enumeration."
            },
            "VolumeSnapshotStatus": {
                "type": "string",
                "enum": [
                    "CREATING",
                    "AVAILABLE",
                    "DELETING",
                    "ERROR",
                    "ERROR_DELETING"
                ],
                "title": "VolumeSnapshotStatus",
                "description": "An enumeration."
            },
            "VolumeSnapshotsResponse": {
                "properties": {
                    "count": {
                        "type": "integer",
                        "title": "Count",
                        "description": "Count of volume snapshots",
                        "default": 0
                    },
                    "volume_snapshots": {
                        "items": {
                            "$ref": "#/components/schemas/VolumeSnapshotsResponseBase"
                        },
                        "type": "array",
                        "title": "Volume Snapshots",
                        "description": "Volume snapshots list"
                    }
                },
                "type": "object",
                "required": [
                    "volume_snapshots"
                ],
                "title": "VolumeSnapshotsResponse"
            },
            "VolumeSnapshotsResponseBase": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id",
                        "description": "Snapshot ID"
                    },
                    "origin_data": {
                        "type": "object",
                        "title": "Origin Data",
                        "description": "The origin_data is the same like the response of https://docs.openstack.org/api-ref/block-storage/v3/index.html?expanded=list-snapshots-and-details-detail#list-snapshots-and-details"
                    },
                    "project_name": {
                        "type": "string",
                        "title": "Project Name",
                        "description": "Project name"
                    },
                    "host": {
                        "type": "string",
                        "title": "Host",
                        "description": "Host name"
                    },
                    "volume_name": {
                        "type": "string",
                        "title": "Volume Name",
                        "description": "Name of volume",
                        "example": "volume-demo"
                    },
                    "child_volumes": {
                        "items": {
                            "$ref": "#/components/schemas/VolumeSnapshotChildVolume"
                        },
                        "type": "array",
                        "title": "Child Volumes",
                        "description": "Child volumes"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "Will be removed, please use origin_data[name]",
                        "deprecated": true
                    },
                    "project_id": {
                        "type": "string",
                        "title": "Project Id",
                        "description": "Will be removed, please use origin_data[os-extended-snapshot-attributes:project_id]",
                        "deprecated": true
                    },
                    "size": {
                        "type": "integer",
                        "title": "Size",
                        "description": "Will be removed, please use origin_data[size]",
                        "deprecated": true
                    },
                    "status": {
                        "type": "string",
                        "title": "Status",
                        "description": "Will be removed, please use origin_data[status]",
                        "deprecated": true
                    },
                    "volume_id": {
                        "type": "string",
                        "title": "Volume Id",
                        "description": "Will be removed, please use origin_data[volume_id]",
                        "deprecated": true
                    },
                    "created_at": {
                        "type": "string",
                        "title": "Created At",
                        "description": "Will be removed, please use origin_data[created_at]",
                        "deprecated": true
                    },
                    "metadata": {
                        "type": "object",
                        "title": "Metadata",
                        "description": "Will be removed, please use origin_data[metadata]",
                        "deprecated": true
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "origin_data"
                ],
                "title": "VolumeSnapshotsResponseBase"
            },
            "VolumeSortKey": {
                "type": "string",
                "enum": [
                    "id",
                    "name",
                    "size",
                    "status",
                    "bootable",
                    "created_at"
                ],
                "title": "VolumeSortKey",
                "description": "An enumeration."
            },
            "VolumeStatus": {
                "type": "string",
                "enum": [
                    "creating",
                    "available",
                    "reserved",
                    "attaching",
                    "detaching",
                    "in-use",
                    "maintenance",
                    "deleting",
                    "awaiting-transfer",
                    "error",
                    "error_deleting",
                    "backing-up",
                    "restoring-backup",
                    "error_backing-up",
                    "error_restoring",
                    "error_extending",
                    "downloading",
                    "uploading",
                    "retyping",
                    "extending"
                ],
                "title": "VolumeStatus",
                "description": "An enumeration."
            },
            "VolumesResponse": {
                "properties": {
                    "count": {
                        "type": "integer",
                        "title": "Count",
                        "description": "Count of volumes",
                        "default": 0
                    },
                    "volumes": {
                        "items": {
                            "$ref": "#/components/schemas/VolumesResponseBase"
                        },
                        "type": "array",
                        "title": "Volumes",
                        "description": "Volumes list"
                    }
                },
                "type": "object",
                "required": [
                    "volumes"
                ],
                "title": "VolumesResponse"
            },
            "VolumesResponseBase": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id",
                        "description": "Volume ID"
                    },
                    "origin_data": {
                        "type": "object",
                        "title": "Origin Data",
                        "description": "The origin_data is the same like the response of https://docs.openstack.org/api-ref/block-storage/v3/index.html?expanded=list-accessible-volumes-with-details-detail#list-accessible-volumes-with-details"
                    },
                    "project_name": {
                        "type": "string",
                        "title": "Project Name",
                        "description": "Project name"
                    },
                    "attachments": {
                        "items": {
                            "$ref": "#/components/schemas/VolumeAttachment"
                        },
                        "type": "array",
                        "title": "Attachments",
                        "description": "Volume attachments"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "Will be removed, please use origin_data[name]",
                        "deprecated": true
                    },
                    "project_id": {
                        "type": "string",
                        "title": "Project Id",
                        "description": "Will be removed, please use origin_data[os-vol-tenant-attr:tenant_id]",
                        "deprecated": true
                    },
                    "host": {
                        "type": "string",
                        "title": "Host",
                        "description": "Will be removed, please use origin_data[os-vol-host-attr:host]",
                        "deprecated": true
                    },
                    "snapshot_id": {
                        "type": "string",
                        "title": "Snapshot Id",
                        "description": "Will be removed, please use origin_data[snapshot_id]",
                        "deprecated": true
                    },
                    "source_volid": {
                        "type": "string",
                        "title": "Source Volid",
                        "description": "Will be removed, please use origin_data[source_volid]",
                        "deprecated": true
                    },
                    "size": {
                        "type": "integer",
                        "title": "Size",
                        "description": "Will be removed, please use origin_data[size]",
                        "deprecated": true
                    },
                    "status": {
                        "type": "string",
                        "title": "Status",
                        "description": "Will be removed, please use origin_data[status]",
                        "deprecated": true
                    },
                    "volume_type": {
                        "type": "string",
                        "title": "Volume Type",
                        "description": "Will be removed, please use origin_data[volume_type]",
                        "deprecated": true
                    },
                    "encrypted": {
                        "type": "boolean",
                        "title": "Encrypted",
                        "description": "Will be removed, please use origin_data[encrypted]",
                        "deprecated": true
                    },
                    "bootable": {
                        "type": "string",
                        "title": "Bootable",
                        "description": "Will be removed, please use origin_data[bootable]",
                        "deprecated": true
                    },
                    "multiattach": {
                        "type": "boolean",
                        "title": "Multiattach",
                        "description": "Will be removed, please use origin_data[multiattach]",
                        "deprecated": true
                    },
                    "availability_zone": {
                        "type": "string",
                        "title": "Availability Zone",
                        "description": "Will be removed, please use origin_data[availability_zone]",
                        "deprecated": true
                    },
                    "created_at": {
                        "type": "string",
                        "title": "Created At",
                        "description": "Will be removed, please use origin_data[created_at]",
                        "deprecated": true
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "origin_data"
                ],
                "title": "VolumesResponseBase"
            }
        }
    }
}